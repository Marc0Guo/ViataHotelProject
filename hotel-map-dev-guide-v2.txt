# Project: Hotel Map App
# Stack: React + TypeScript + Tailwind CSS + Mapbox GL JS + Supercluster
# Build Tool: Vite

# ========== Directory Structure (Do NOT modify) ==========
- src/
  - components/
    - Map.tsx             # Main map logic, rendering, and clustering
    - MarkerPopup.tsx     # Stateless JSX template for marker popup
  - data/
    - hotels.ts           # Array of hotel objects, source of truth
  - types/
    - hotel.ts            # Hotel TypeScript interface
  - App.tsx               # Layout, renders <Map />
  - index.tsx             # ReactDOM render
- public/
  - mapbox-style.json     # Optional custom style
- .env                    # Contains VITE_MAPBOX_TOKEN
- tailwind.config.js      # Tailwind config
- postcss.config.js       # PostCSS config
- vite.config.ts          # Vite config

# ========== Allowed Libraries ==========
- react
- react-dom
- mapbox-gl
- supercluster
- tailwindcss
- postcss
- autoprefixer

# ========== Environment Variables ==========
File: .env
VITE_MAPBOX_TOKEN=your_mapbox_access_token_here

# ========== Data Definition ==========
File: src/types/hotel.ts
```ts
export interface Hotel {
  hotel_id: number;
  name: string;
  latitude: number;
  longitude: number;
  address: string;
  star_rating: number;
  price_per_night: number;
  currency: string;
  rating: number;
  review_count: number;
  image_url: string;
  room_type: string;
  amenities: string[];
}
```

File: src/data/hotels.ts
```ts
import { Hotel } from "../types/hotel";

export const hotels: Hotel[] = [
  {
    hotel_id: 1,
    name: "Four Seasons Hotel Seattle",
    latitude: 47.60763,
    longitude: -122.33941,
    address: "99 Union Street",
    star_rating: 5,
    price_per_night: 1999,
    currency: "USD",
    rating: 9,
    review_count: 828,
    image_url: "https://img.fih.io/image/raw/regular/provider_partition=eps/nSBZaKQDtsSJMyyg2FOscPf7ApPai1ZxHT0_199Q23Y=.webp",
    room_type: "Room, 1 King Bed, Non Smoking (Seattle View)",
    amenities: [
      "WiFi",
      "Parking",
      "Gym",
      "Pool",
      "Restaurant",
      "Bar",
      "Spa",
      "Business Center"
    ]
  },
  // Add more hotel objects following the same structure
];
```

# ========== Component: Map.tsx ==========
Responsibilities:
- Initialize Mapbox map with correct token
- Use `mapboxgl.Map` and `mapContainerRef`
- Load hotel data from `../data/hotels`
- Display markers and popups with `mapboxgl.Marker`, `mapboxgl.Popup`
- Use `Supercluster` to group nearby markers
- Listen to `map.on("moveend")` to update clusters
- Popup content HTML should be handled by MarkerPopup.tsx

Do NOT:
- Do not create any `useMap` hook
- Do not use Context
- Do not split Supercluster logic into another file
- Do not use Redux or Zustand

# ========== Component: MarkerPopup.tsx ==========
Responsibilities:
- Render hotel name, price, star rating, image, and amenities
- Output should return a string or JSX that will be stringified
```ts
interface Props {
  name: string;
  price_per_night: number;
  star_rating: number;
  rating: number;
  review_count: number;
  image_url: string;
  amenities: string[];
}
```

# ========== Styling Guidelines ==========
- Only use Tailwind CSS
- Do not import or use `*.css` files
- Do not use `styled-components`
- Tailwind utilities only
- Map container must use: `className="w-screen h-screen"`

# ========== App.tsx ==========
Responsibilities:
- Import and render `<Map />` only

# ========== Cluster Implementation ==========
Use library: `supercluster`

GeoJSON structure:
```ts
{
  type: "Feature",
  properties: {
    cluster: boolean;
    hotelId?: number;
    point_count?: number;
  },
  geometry: {
    type: "Point",
    coordinates: [longitude, latitude]
  }
}
```

- Call `index.getClusters()` on `moveend`
- Cluster points use `properties.cluster === true`
- Clicking on a cluster should zoom into it:
```ts
map.easeTo({
  center: clusterCenter,
  zoom: nextZoomLevel
});
```

# ========== Deployment ==========
- Use Netlify or Vercel
- Build with: `npm run build`
- Output directory: `dist`
- Set environment variable: `VITE_MAPBOX_TOKEN`

# ========== Build Commands ==========
- Development: `npm run dev`
- Production:  `npm run build`

# ========== Guardrails ==========
- ❌ Do not auto-generate any context, hooks, or abstraction folders
- ❌ Do not rename `Map.tsx`, `hotels.ts`, or `hotel.ts`
- ✅ Always use data from `src/data/hotels.ts`
- ✅ All markers and clustering logic must stay in `Map.tsx`
- ✅ Popup HTML logic lives in `MarkerPopup.tsx`
- ✅ Do not split map state into a separate store or file